-- Explore All Countries Our Customers Come form.
SELECT DISTINCT country
FROM gold.dim_customers;

--Explore All Categories "The major Divisions"
SELECT DISTINCT category, subcategory, product_name
FROM gold.dim_products
order by category, subcategory, product_name;

--Find the date of the first and last order
SELECT min(order_date) AS 'First Order Date', max(order_date) AS 'Last Order Date',
DATEDIFF(MONTH, MIN(order_date),MAX(order_date)) AS 'Order Range Months'
FROM gold.fact_sales;

--Find the youngest ans oldest custome
SELECT MIN(birthdate) AS 'Oldest Customer',  
DATEDIFF(YEAR,MIN(birthdate),GETDATE()) AS 'Oldest Age',
MAX(birthdate) AS 'Youngest Customer',
DATEDIFF(YEAR, MAX(birthdate),GETDATE()) AS 'Youngest Age'
FROM gold.dim_customers;

--Find total sales
SELECT SUM(sales_amount) AS 'Total Sales'
FROM gold.fact_sales;

--Find how many items are sold
SELECT SUM(quantity) AS 'Total Quantity'
FROM gold.fact_sales;

--Find the average selling price
SELECT AVG(price)
FROM gold.fact_sales;

--Find the total number of orders
SELECT COUNT(order_number) AS 'Total Orders'
FROM gold.fact_sales;

SELECT COUNT(DISTINCT order_number) AS 'Total Orders'
FROM gold.fact_sales;

-- Find the total number of products
SELECT COUNT(product_id)
FROM gold.dim_products;

--Find the total number of customers
SELECT COUNT(customer_id)
FROM gold.dim_customers;

--Find total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) AS 'Total Customers'
FROM gold.fact_sales;


--Generate a report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
UNION ALL 
SELECT 'Total Nr. Products', COUNT(product_name) FROM gold.dim_products
UNION ALL
SELECT 'Total Nr Customers',COUNT(customer_key) FROM gold.dim_customers

--Find total customers by countries
SELECT country AS 'Country',COUNT(customer_key) AS 'Total Customers'
FROM gold.dim_customers
GROUP BY country
ORDER BY [Total Customers] DESC;

--Find total customers by gender
SELECT gender as 'Gender',COUNT(customer_key) AS 'Total Customers'
FROM gold.dim_customers
GROUP BY gender
ORDER BY COUNT(customer_key) DESC;

--Find total products by category
SELECT category AS 'Category', COUNT(product_key)
FROM gold.dim_products
GROUP BY category
ORDER BY COUNT(product_key) DESC;

--What is the average cost in each category
SELECT category AS 'Category', AVG(cost) AS 'Average Cost'
FROM gold.dim_products
GROUP BY category
ORDER BY [Average Cost] DESC;

--What is the total revenue generated for each category?
SELECT p.category AS 'Category', SUM(f.sales_amount) AS 'Total Revenue'
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY [Total Revenue] DESC;

--Total revenue generated by each customer
SELECT  c.customer_key,c.first_name,c.last_name,SUM(f.sales_amount) AS 'Total Revenue per Customer'
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key = c.customer_key
GROUP BY c.customer_key,c.first_name,c.last_name
ORDER BY [Total Revenue per Customer] DESC;

--What is the distribution of sold items across countries?
SELECT c.country, SUM(f.quantity) AS 'Total Sold Item'
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key  = c.customer_key
GROUP BY country
ORDER BY [Total Sold Item] DESC;

--Which 5 products generate the highest revenue?
SELECT TOP 5 p.product_name,SUM(s.sales_amount) 
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.product_name
ORDER BY SUM(s.sales_amount) DESC;

--What are the 5 worst performing products in terms of sales
SELECT TOP 5 p.product_name,SUM(s.sales_amount) 
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.product_name
ORDER BY SUM(s.sales_amount) ASC;


SELECT  p.product_name,SUM(s.sales_amount),
ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount) DESC) AS 'Rank_Products'
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.product_name

SELECT *
FROM (
	SELECT  p.product_name,SUM(s.sales_amount) AS Total_Sales,
	ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount) DESC) AS Rank_Products
	FROM gold.fact_sales s
	LEFT JOIN gold.dim_products p
	ON s.product_key = p.product_key
	GROUP BY p.product_name)t
WHERE Rank_Products < 5

SELECT *
FROM (
	SELECT  p.product_name,SUM(s.sales_amount) AS Total_Sales,
	RANK() OVER (ORDER BY SUM(s.sales_amount) DESC) AS Rank_Products
	FROM gold.fact_sales s
	LEFT JOIN gold.dim_products p
	ON s.product_key = p.product_key
	GROUP BY p.product_name)t
WHERE Rank_Products < 5

--Find the top 10 customers who have generated te highest revenue
SELECT *
FROM(
	SELECT c.customer_id,c.first_name,c.last_name,SUM(f.sales_amount) AS 'Top Amount',
	RANK() OVER (ORDER BY SUM(f.sales_amount) DESC) AS 'Rank Customer'
	FROM gold.fact_sales f
	LEFT JOIN gold.dim_customers c
	ON f.customer_key = c.customer_key
	GROUP BY c.customer_id,c.first_name,c.last_name)T
WHERE [Rank Customer] <= 10

SELECT TOP 10 c.customer_id,c.first_name,c.last_name,SUM(f.sales_amount) AS 'Top Amount'
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key = c.customer_key
GROUP BY c.customer_id,c.first_name,c.last_name
ORDER BY [Top Amount] DESC

